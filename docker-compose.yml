services:
  db:
    image: postgres:16.9-alpine
    container_name: transplant-db
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "8001:5432"
  api:
    build:
      context: .
      target: dev-runner
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health/" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "8000:8000"
    image: transplant-api-image
    container_name: transplant-api
    env_file:
      - .env
    environment:
      DB_HOST: db
      USE_LOCAL_DB: "true"
    depends_on:
      - db
  web:
    build:
      context: ./frontend
      target: dev-runner
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    image: transplant-web-image
    container_name: transplant-web
    env_file:
      - ./frontend/.env
    depends_on:
      api:
        condition: service_healthy


volumes:
  db_data:
